{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","inner","name","textMessage","time","messageData","HW1","Affair","someClass","affairName","affair","priority","lowColorPriority","highColorPriority","removeButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","filter","activeFilter","filterButtons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressEnter","inputClass","errorMessageClass","messageOfError","value","onChange","onKeyPress","buttonAdd","disabled","totalCounter","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","currentTarget","charCode","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4ed73964.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2jOW1\",\"filterButtons\":\"Affairs_filterButtons__TqWPH\",\"activeFilter\":\"Affairs_activeFilter__30Ui-\",\"removeButton\":\"Affairs_removeButton__1z-7Z\",\"lowColorPriority\":\"Affairs_lowColorPriority__1AA5r\",\"highColorPriority\":\"Affairs_highColorPriority__2EAgL\",\"affairName\":\"Affairs_affairName__21UXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2EmPq\",\"error\":\"Greeting_error__OC-sS\",\"messageOfError\":\"Greeting_messageOfError__1GA-Z\",\"buttonAdd\":\"Greeting_buttonAdd__1iNPX\",\"totalCounter\":\"Greeting_totalCounter__O6Xqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3LdCn\",\"inner\":\"Message_inner__1NUoY\",\"name\":\"Message_name__yjswx\",\"textMessage\":\"Message_textMessage__1Hacz\",\"time\":\"Message_time__36tCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2xPmm\",\"superInput\":\"SuperInputText_superInput__qbZxi\",\"errorInput\":\"SuperInputText_errorInput__1US-h\",\"error\":\"SuperInputText_error__LHQoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__PKSPU\",\"red\":\"SuperButton_red__VyGfv\",\"button\":\"SuperButton_button__1ojer\",\"blink\":\"SuperButton_blink__F6Er4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3OZV5\",\"checkbox\":\"SuperCheckbox_checkbox__Ab58d\",\"spanClassName\":\"SuperCheckbox_spanClassName__1hDYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1RQAa\",\"column\":\"HW4_column__1WPF-\",\"testSpanError\":\"HW4_testSpanError__1VkWc\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message (props: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar}/>\r\n            <div className={s.inner}>\r\n                <div className={s.name}> {props.name} </div>\r\n                <div className={s.textMessage}> {props.message} </div>\r\n                <div className={s.time}> {props.time} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\";\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.someClass}>\r\n            <div className={s.affairName}>\r\n            {props.affair.name}\r\n                </div>\r\n            <div className={props.affair.priority === 'low' || props.affair.priority === 'middle' ? s.lowColorPriority : s.highColorPriority}>\r\n            [{props.affair.priority}]\r\n                </div>\r\n            <button className={s.removeButton}\r\n                    onClick={deleteCallback}>X\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from '../h2/Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    }\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={props.filter === 'all'? s.activeFilter: s.filterButtons}\r\n                    onClick={setAll}>All\r\n            </button>\r\n            <button className={props.filter === 'high'? s.activeFilter: s.filterButtons}\r\n                    onClick={setHigh}>High\r\n            </button>\r\n            <button className={props.filter === 'middle'? s.activeFilter: s.filterButtons}\r\n                    onClick={setMiddle}>Middle\r\n            </button>\r\n            <button className={props.filter === 'low'? s.activeFilter: s.filterButtons}\r\n                    onClick={setLow}>Low\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\nlet defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html&css', priority: 'middle'},\r\n]\r\n\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'low') return affairs.filter(f => f.priority === 'low')\r\n    else if (filter === 'middle') return affairs.filter(f => f.priority === 'middle')\r\n    else if (filter === 'high') return affairs.filter(f => f.priority === 'high')\r\n    return affairs;\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string// need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''  // need to fix with (?:)\r\n    const errorMessageClass = error ? s.messageOfError : ''\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   onKeyPress={onKeyPressEnter}/>\r\n            <button className={s.buttonAdd}\r\n                    disabled={!!error}\r\n                    onClick={addUser}>add\r\n            </button>\r\n            <span className={s.totalCounter}>{totalUsers}</span>\r\n            <div>\r\n                <span className={errorMessageClass}>{error}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setError('')\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (name === ''){\r\n            setError('Title is required')\r\n        } else {\r\n        alert(`Hello ${name} !`) // need to fix\r\n            addUserCallback(name)\r\n        setName('')}\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13){\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressEnter={onKeyPressEnter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\nimport s from './Greeting.module.css'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name}\r\n        setUsers([newUser, ...users]) // need to fix\r\n    }\r\n    return (\r\n        <div className={s.someClass}>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}